#include <iostream>
#include <sstream>
using namespace std;

struct complex_t {
       float real;
       float imag;
       complex_t() {
	       real = 0.0f;
	       imag = 0.0f;
       }

       complex_t add( complex_t other ) const
       {
	       complex_t complex;
	       complex.real = this->real + other.real;
	       complex.imag = this->imag + other.imag;
               return complex;
       }
 
       complex_t sub( complex_t other ) const
       {
	       complex_t complex;
	       complex.real = this->real - other.real;
               complex.imag = this->imag - other.imag;
	       return complex;
       }

       complex_t mul( complex_t other ) const
       {
               complex_t complex;
	       complex.real = this->real * other.real - this->imag * other.imag;
	       complex.imag = this->imag * other.real + this->real * other.imag;
	       return complex;
       }

       complex_t div( complex_t other ) const
       {
	       complex_t complex;
               complex.real = (this->real * other.real + this->imag * other.imag) / (other.real * other.real + other.imag * other.imag);
	       complex.imag = (this->imag * other.real - this->real * other.imag) / (other.real * other.real + other.imag * other.imag);
	       return complex;
       }

       std::istream & read( std::istream & stream )
       {
	       char symbol;
               float real;
	       float imag;
	       bool res = true;
	       if (stream >> symbol & symbol == '(' &&
	               stream >> real &&
	               stream >> symbol && symbol == ',' &&
                       stream >> imag &&
	               stream >> symbol && symbol == ')')
    	       {
                       this->real = real;
                       this->imag = imag;
	           }
               else {
		       res = false; cerr << "An error has occured while reading input data";
               }
	       return stream;
       }

       std::ostream & write( std::ostream & stream ) const
       {
	       return stream << '(' << real << ',' << imag << ')' << endl;
       }
};

int main()
{
       complex_t cm1, cm2, result;
       string string;
       getline(cin, string);
       istringstream stream(string);
       char znak;
       if (cm1.read(stream) && stream >> znak && cm2.read(stream)) {
		switch (znak) {
	        case '+': {result = cm1.add(cm2);
		        break; };
	        case '-': {result = cm1.sub(cm2);
			break; };
		case '*': {result = cm1.mul(cm2);
			break; };
		case '/': {result = cm1.div(cm2);
			break; };
		default: {cerr << "Error";
		        break; }
		}
		result.write(cout);
	}
}

